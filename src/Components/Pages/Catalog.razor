@page "/catalog"
@using System.Security.Claims
@using Valhala.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider
@using MudBlazor
@using Valhala.Controller.Data
@using Microsoft.AspNetCore.Components
@using Valhala.Controller.UI
@using Valhala.Components.Layout
@using Valhala.Controller.Products

@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime

<PageTitle>Catálogo</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        @foreach (var produto in Produtos)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard>
                    <MudCardMedia Image="@produto.GetImagem()" Alt="Imagem do produto" Height="200" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6">@produto.GetNome()</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="async () => VerDetalhes(produto.GetID())">
                            Ver Detalhes
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@if (IsGestor())
{
    <MudButton Color="Color.Dark" Variant="Variant.Filled" Class="mt-4" OnClick="NavigateToAddProduct">
        Adicionar Produto
    </MudButton>
}


@code {
    private List<Produto> Produtos = new List<Produto>();
    private string? UserRole => userSession?.Role;
    private UserSession? userSession;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var claimsPrincipal = authState.User;

        var id = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        var name = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;
        var role = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;

        if (id != null && name != null && role != null)
        {
            userSession = new UserSession(int.Parse(id), name, role);
        }
        else
        {
            userSession = null;
        }

        if (IsGestor()) {
            Produtos = ProdutoDAO.GetInstance().ListarProdutos();
        }
    }

    private bool IsGestor() => userSession?.Role == "Gestor";

    private void NavigateToAddProduct()
    {
        NavManager.NavigateTo("/addProduct"); // Redireciona para a página de adicionar produto
    }

    private void VerDetalhes(int id)
    {
        NavManager.NavigateTo($"/produto/{id}");
    }
}
