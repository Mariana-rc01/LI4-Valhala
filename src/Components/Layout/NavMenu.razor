@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Valhala.Authentication
@using Microsoft.AspNetCore.Components
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="flex w-full justify-center pt-8">
    <img src="images/valhala.svg" class="select-none" />
</div>

@if (userSession != null)
{
<MudNavMenu class="pt-12 relative" Style="height: 100%; display: flex; flex-direction: column;">
    @foreach (var link in _links)
    {
        <MudNavLink Href="@link.Href" Icon="@link.Icon">@link.Name</MudNavLink>
    }

    <div class="mb-8" Style="margin-top: auto;">
        <MudMenu Style="width: 100%;">
            <ActivatorContent>
                <MudAvatar class="ml-8 text-white"> @{ var initials = string.Join("", userSession.Name.Split(" ").Select(word => word[0])); @initials}</MudAvatar>
                <div class="pl-4">
                    <p class="font-semibold">@userSession.Name</p>
                    <p class="text-sm">@userSession.Role</p>
                </div>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Icon="@Icons.Material.Outlined.Logout" OnClick="Logout">Terminar Sessão</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </div>
</MudNavMenu>

}
else{}

@code {
    class NavLink
    {
        public required string Name { get; set; }
        public required string Href { get; set; }
        public required string Icon { get; set; }
    }

    private List<NavLink> _links = new List<NavLink>
    {
        new NavLink { Name = "Catálogo", Href = "/catalog", Icon = Icons.Material.Outlined.Chair },
        new NavLink { Name = "Encomendas", Href = "/orders", Icon = Icons.Material.Outlined.Inventory2 },
        new NavLink { Name = "Gestão de Peças", Href = "/parts", Icon = Icons.Material.Outlined.Handyman },
        new NavLink { Name = "Utilizadores", Href = "/users", Icon = Icons.Material.Outlined.Group },
    };

    private UserSession? userSession;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var claimsPrincipal = authState.User;

        var id = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        var name = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;
        var role = claimsPrincipal.FindFirst(c => c.Type == ClaimTypes.Role)?.Value;

        if (id != null && name != null && role != null)
        {
            userSession = new UserSession(int.Parse(id), name, role);
            _links = GetUserLinks(role);
        }
        else
        {
            userSession = null;
        }
    }

    private List<NavLink> GetUserLinks(string role)
    {
        switch (role)
        {
            case "Gestor":
                return new List<NavLink>
                {
                    new NavLink { Name = "Catálogo", Href = "/catalog", Icon = Icons.Material.Outlined.Chair },
                    new NavLink { Name = "Encomendas", Href = "/orders", Icon = Icons.Material.Outlined.Inventory2 },
                    new NavLink { Name = "Gestão de Peças", Href = "/parts", Icon = Icons.Material.Outlined.Handyman },
                    new NavLink { Name = "Utilizadores", Href = "/users", Icon = Icons.Material.Outlined.Group },
                };

            case "Cliente":
                return new List<NavLink>
                {
                    new NavLink { Name = "Catálogo", Href = "/catalog", Icon = Icons.Material.Outlined.Chair },
                    new NavLink { Name = "Encomendas", Href = "/orders", Icon = Icons.Material.Outlined.Inventory2 },
                };

            case "Fornecedor":
                return new List<NavLink>
                {
                    new NavLink { Name = "Catálogo", Href = "/catalog", Icon = Icons.Material.Outlined.Chair },
                    new NavLink { Name = "Gestão de Peças", Href = "/parts", Icon = Icons.Material.Outlined.Handyman },
                };

            case "Funcionario":
                return new List<NavLink>
                {
                    new NavLink { Name = "Catálogo", Href = "/catalog", Icon = Icons.Material.Outlined.Chair },
                    new NavLink { Name = "Encomendas", Href = "/orders", Icon = Icons.Material.Outlined.Inventory2 },
                    new NavLink { Name = "Utilizadores", Href = "/users", Icon = Icons.Material.Outlined.Group },
                };

            default:
                return new List<NavLink>();
        }
    }

    private void Logout()
    {
        userSession = null;
        NavigationManager.NavigateTo("/login", true); // depois redirecionamos para o login
    }
}
