@using MudBlazor
@inject Valhala.Controller.UI.UIService UIService


<MudDialog Class="custom-modal">
    <TitleContent>
        Remover utilizador
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">
                <MudTextField Label="Identificador" @bind-Value="user.Id" />
            </MudItem>
            <MudItem xs="6">
                <MudSelect T="string" Label="Tipo de utilizador" AnchorOrigin="Origin.BottomCenter"
                    @bind-Value="user.UserType">
                    <MudSelectItem Value="@UserTypes.Funcionario">Funcion√°rio</MudSelectItem>
                    <MudSelectItem Value="@UserTypes.Gestor">Gestor</MudSelectItem>
                    <MudSelectItem Value="@UserTypes.Fornecedor">Fornecedor</MudSelectItem>
                    <MudSelectItem Value="@UserTypes.Cliente">Cliente</MudSelectItem>
                </MudSelect>
            </MudItem>
            <MudItem xs="6" Style="display: flex; justify-content: flex-end;">
                <DialogActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Submit">Remover Utilizador</MudButton>
                </DialogActions>
            </MudItem>
        </MudGrid>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }

    private UserRemoveModel user = new UserRemoveModel();


    private async Task Submit()
    {
        try{
            if (string.IsNullOrEmpty(user.UserType))
            {
                Console.WriteLine("User type is not selected or invalid.");
                return;
            }
            Console.WriteLine("User type is selected.");
            Console.WriteLine("User type: " + user.UserType);
        

        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }


    }

@* private void Submit()
{
    if (string.IsNullOrEmpty(user.UserType))
    {
        Console.WriteLine("User type is not selected or invalid.");
        return;
    }
    Console.WriteLine("User type is selected.");
    Console.WriteLine("User type: " + user.UserType);

    int removeOut = UIService.RemoverUser(user.Id, user.UserType);
    MudDialog?.Close(DialogResult.Ok(removeOut));
} *@

 

    public class UserRemoveModel
    {
        public int Id { get; set; }
        public string? UserType { get; set; }= "Funcionario";
    }

        public static class UserTypes
    {
        public const string Funcionario = "Funcionario";
        public const string Gestor = "Gestor";
        public const string Fornecedor = "Fornecedor";
        public const string Cliente = "Cliente";
    }

}
